{"version":3,"file":"analysis.eeecd824f01bab637b3c.js","mappings":"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","sources":["webpack://simplechessapp/./public/js/analysis.js"],"sourcesContent":["class ChessAnalysis {\n    constructor() {\n        this.board = null;\n        this.game = new Chess();\n        this.engineRunning = false;\n        this.currentDepth = 15;\n        this.currentMultiPV = 3;\n        this.moveHistory = [];\n        this.activeBets = new Map();\n        this.socket = io();\n\n        this.initializeBoard();\n        this.initializeEngine();\n        this.setupEventListeners();\n        this.setupWebSocket();\n    }\n\n    initializeBoard() {\n        const config = {\n            position: 'start',\n            draggable: true,\n            onDragStart: this.onDragStart.bind(this),\n            onDrop: this.onDrop.bind(this),\n            onSnapEnd: this.onSnapEnd.bind(this)\n        };\n\n        this.board = Chessboard('board', config);\n        $(window).resize(() => this.board.resize());\n    }\n\n    initializeEngine() {\n        // Initialize engine settings\n        document.getElementById('engineToggle').checked = false;\n        document.getElementById('depthSelect').value = this.currentDepth;\n        document.getElementById('multiPvSelect').value = this.currentMultiPV;\n    }\n\n    setupEventListeners() {\n        // Board control buttons\n        document.getElementById('newPositionBtn').addEventListener('click', () => this.newPosition());\n        document.getElementById('flipBoardBtn').addEventListener('click', () => this.board.flip());\n        document.getElementById('copyFenBtn').addEventListener('click', () => this.copyFEN());\n        document.getElementById('pasteFenBtn').addEventListener('click', () => this.pasteFEN());\n\n        // Engine controls\n        document.getElementById('engineToggle').addEventListener('change', (e) => this.toggleEngine(e.target.checked));\n        document.getElementById('depthSelect').addEventListener('change', (e) => {\n            this.currentDepth = parseInt(e.target.value);\n            if (this.engineRunning) this.analyzePosition();\n        });\n        document.getElementById('multiPvSelect').addEventListener('change', (e) => {\n            this.currentMultiPV = parseInt(e.target.value);\n            if (this.engineRunning) this.analyzePosition();\n        });\n\n        // Betting controls\n        document.getElementById('placeBetBtn').addEventListener('click', () => this.placeBet());\n    }\n\n    setupWebSocket() {\n        this.socket.on('analysisUpdate', (data) => {\n            this.updateAnalysis(data);\n        });\n\n        this.socket.on('betUpdate', (data) => {\n            this.updateBets(data);\n        });\n    }\n\n    onDragStart(source, piece) {\n        if (this.game.isGameOver()) return false;\n\n        // Allow picking up pieces only for the side to move\n        if ((this.game.turn() === 'w' && piece.search(/^b/) !== -1) ||\n            (this.game.turn() === 'b' && piece.search(/^w/) !== -1)) {\n            return false;\n        }\n        return true;\n    }\n\n    onDrop(source, target) {\n        const move = this.game.move({\n            from: source,\n            to: target,\n            promotion: 'q' // Always promote to queen for simplicity\n        });\n\n        if (move === null) return 'snapback';\n\n        this.moveHistory.push(move);\n        this.updateMoveList();\n        \n        if (this.engineRunning) {\n            this.analyzePosition();\n        }\n    }\n\n    onSnapEnd() {\n        this.board.position(this.game.fen());\n    }\n\n    async analyzePosition() {\n        const fen = this.game.fen();\n        \n        try {\n            const response = await fetch('/api/analyze', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    fen,\n                    depth: this.currentDepth,\n                    multiPV: this.currentMultiPV\n                })\n            });\n\n            const analysis = await response.json();\n            this.updateAnalysisDisplay(analysis);\n        } catch (error) {\n            console.error('Analysis error:', error);\n            this.showError('Analysis failed');\n        }\n    }\n\n    updateAnalysisDisplay(analysis) {\n        const evalDiv = document.getElementById('positionEval');\n        const bestLinesDiv = document.getElementById('bestLines');\n        const moveStrengthDiv = document.getElementById('moveStrength');\n\n        // Clear previous content\n        evalDiv.innerHTML = '';\n        bestLinesDiv.innerHTML = '';\n        moveStrengthDiv.innerHTML = '';\n\n        // Update evaluation\n        const mainLine = analysis.lines[0];\n        const evalBar = this.createEvalBar(mainLine.score);\n        evalDiv.appendChild(evalBar);\n\n        // Update best lines\n        analysis.lines.forEach((line, index) => {\n            const lineDiv = document.createElement('div');\n            lineDiv.className = 'analysis-line';\n            lineDiv.innerHTML = `\n                <span class=\"line-score\">${this.formatScore(line.score)}</span>\n                <span class=\"line-moves\">${this.formatLine(line.pv)}</span>\n            `;\n            bestLinesDiv.appendChild(lineDiv);\n        });\n\n        // Update move strength indicator\n        if (this.moveHistory.length > 0) {\n            const lastMove = this.moveHistory[this.moveHistory.length - 1];\n            const strength = this.getMoveStrength(lastMove, mainLine.score);\n            moveStrengthDiv.textContent = strength;\n        }\n    }\n\n    createEvalBar(score) {\n        const container = document.createElement('div');\n        container.className = 'eval-bar-container';\n        \n        const bar = document.createElement('div');\n        bar.className = 'eval-bar';\n        \n        const percentage = this.scoreToPercentage(score);\n        bar.style.height = `${percentage}%`;\n        \n        container.appendChild(bar);\n        return container;\n    }\n\n    scoreToPercentage(score) {\n        if (typeof score === 'string' && score.startsWith('#')) {\n            return score.startsWith('#-') ? 0 : 100;\n        }\n        \n        const numScore = parseFloat(score);\n        const percentage = 50 + (Math.atan(numScore / 3) / Math.PI * 100);\n        return Math.max(0, Math.min(100, percentage));\n    }\n\n    formatScore(score) {\n        if (typeof score === 'string' && score.startsWith('#')) {\n            return score; // Mate score\n        }\n        return (score / 100).toFixed(2);\n    }\n\n    formatLine(moves) {\n        return moves.slice(0, 5).join(' '); // Show first 5 moves only\n    }\n\n    getMoveStrength(move, evaluation) {\n        const abs = Math.abs(evaluation);\n        if (abs > 300) return '!!';\n        if (abs > 150) return '!';\n        if (abs > -50) return '⩲';\n        if (abs > -150) return '?';\n        return '??';\n    }\n\n    placeBet() {\n        const type = document.getElementById('betType').value;\n        const amount = parseInt(document.getElementById('betAmount').value);\n        const choice = document.getElementById('betChoice').value;\n\n        if (!amount || amount < 1) {\n            this.showError('Please enter a valid bet amount');\n            return;\n        }\n\n        const bet = {\n            type,\n            amount,\n            choice,\n            position: this.game.fen(),\n            timestamp: new Date()\n        };\n\n        this.socket.emit('placeBet', bet);\n    }\n\n    updateBets(bets) {\n        const betsListDiv = document.querySelector('.bets-list');\n        betsListDiv.innerHTML = '';\n\n        bets.forEach(bet => {\n            const betDiv = document.createElement('div');\n            betDiv.className = 'bet-item';\n            betDiv.innerHTML = `\n                <div class=\"bet-type\">${bet.type}</div>\n                <div class=\"bet-amount\">$${bet.amount}</div>\n                <div class=\"bet-choice\">${bet.choice}</div>\n            `;\n            betsListDiv.appendChild(betDiv);\n        });\n    }\n\n    newPosition() {\n        this.game = new Chess();\n        this.board.position('start');\n        this.moveHistory = [];\n        this.updateMoveList();\n        if (this.engineRunning) {\n            this.analyzePosition();\n        }\n    }\n\n    copyFEN() {\n        navigator.clipboard.writeText(this.game.fen())\n            .then(() => this.showSuccess('FEN copied to clipboard'))\n            .catch(() => this.showError('Failed to copy FEN'));\n    }\n\n    async pasteFEN() {\n        try {\n            const fen = await navigator.clipboard.readText();\n            if (this.game.load(fen)) {\n                this.board.position(fen);\n                if (this.engineRunning) {\n                    this.analyzePosition();\n                }\n            } else {\n                this.showError('Invalid FEN string');\n            }\n        } catch (error) {\n            this.showError('Failed to paste FEN');\n        }\n    }\n\n    updateMoveList() {\n        const movesDiv = document.getElementById('movesList');\n        movesDiv.innerHTML = '';\n\n        this.moveHistory.forEach((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            const moveElement = document.createElement('span');\n            moveElement.className = 'move';\n            \n            if (index % 2 === 0) {\n                moveElement.textContent = `${moveNumber}. ${move.san} `;\n            } else {\n                moveElement.textContent = `${move.san} `;\n            }\n            \n            movesDiv.appendChild(moveElement);\n        });\n    }\n\n    toggleEngine(enabled) {\n        this.engineRunning = enabled;\n        if (enabled) {\n            this.analyzePosition();\n        } else {\n            document.getElementById('engineOutput').innerHTML = '';\n        }\n    }\n\n    showError(message) {\n        // Implement error notification\n        console.error(message);\n    }\n\n    showSuccess(message) {\n        // Implement success notification\n        console.log(message);\n    }\n}\n\n// Initialize when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.chessAnalysis = new ChessAnalysis();\n}); "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","ChessAnalysis","_classCallCheck","this","board","game","Chess","engineRunning","currentDepth","currentMultiPV","moveHistory","activeBets","Map","socket","io","initializeBoard","initializeEngine","setupEventListeners","setupWebSocket","_this","config","position","draggable","onDragStart","bind","onDrop","onSnapEnd","Chessboard","$","window","resize","document","getElementById","checked","_this2","addEventListener","newPosition","flip","copyFEN","pasteFEN","toggleEngine","target","parseInt","analyzePosition","placeBet","_this3","on","data","updateAnalysis","updateBets","source","piece","isGameOver","turn","search","move","from","to","promotion","updateMoveList","fen","_analyzePosition","_callee","response","analysis","_context","fetch","headers","body","JSON","stringify","depth","multiPV","json","updateAnalysisDisplay","t0","console","error","showError","_this4","evalDiv","bestLinesDiv","moveStrengthDiv","innerHTML","mainLine","lines","evalBar","createEvalBar","score","appendChild","line","index","lineDiv","createElement","className","concat","formatScore","formatLine","pv","lastMove","strength","getMoveStrength","textContent","container","bar","percentage","scoreToPercentage","style","height","startsWith","numScore","parseFloat","Math","atan","PI","max","min","toFixed","moves","join","evaluation","abs","amount","choice","bet","timestamp","Date","emit","bets","betsListDiv","querySelector","betDiv","_this5","navigator","clipboard","writeText","showSuccess","_pasteFEN","_callee2","_context2","readText","load","movesDiv","moveNumber","floor","moveElement","san","enabled","message","log","chessAnalysis"],"sourceRoot":""}