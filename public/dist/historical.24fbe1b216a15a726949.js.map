{"version":3,"file":"historical.24fbe1b216a15a726949.js","mappings":"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","sources":["webpack://simplechessapp/./public/js/historical.js"],"sourcesContent":["class HistoricalGamePlayer {\n    constructor() {\n        this.socket = io();\n        this.board = document.getElementById('chessboard');\n        this.movesList = document.getElementById('movesList');\n        this.gameInfo = document.getElementById('gameInfo');\n        this.controlsContainer = document.getElementById('controls');\n        this.analysisPanel = document.getElementById('analysisPanel');\n        \n        this.currentPosition = 0;\n        this.isPlayingAlternative = false;\n        \n        this.initializeControls();\n        this.initializeEventListeners();\n    }\n\n    initializeControls() {\n        const controls = `\n            <div class=\"control-group\">\n                <button id=\"startBtn\" class=\"control-btn\">\n                    <i class=\"fas fa-fast-backward\"></i>\n                </button>\n                <button id=\"prevBtn\" class=\"control-btn\">\n                    <i class=\"fas fa-step-backward\"></i>\n                </button>\n                <button id=\"playPauseBtn\" class=\"control-btn\">\n                    <i class=\"fas fa-play\"></i>\n                </button>\n                <button id=\"nextBtn\" class=\"control-btn\">\n                    <i class=\"fas fa-step-forward\"></i>\n                </button>\n                <button id=\"endBtn\" class=\"control-btn\">\n                    <i class=\"fas fa-fast-forward\"></i>\n                </button>\n            </div>\n            <div class=\"control-group\">\n                <button id=\"analyzeBtn\" class=\"control-btn\">\n                    <i class=\"fas fa-microscope\"></i> Analyze\n                </button>\n                <button id=\"saveLineBtn\" class=\"control-btn\" disabled>\n                    <i class=\"fas fa-save\"></i> Save Line\n                </button>\n            </div>\n        `;\n        this.controlsContainer.innerHTML = controls;\n    }\n\n    initializeEventListeners() {\n        // Playback controls\n        document.getElementById('startBtn').addEventListener('click', () => this.jumpToStart());\n        document.getElementById('prevBtn').addEventListener('click', () => this.prevMove());\n        document.getElementById('playPauseBtn').addEventListener('click', () => this.toggleAutoPlay());\n        document.getElementById('nextBtn').addEventListener('click', () => this.nextMove());\n        document.getElementById('endBtn').addEventListener('click', () => this.jumpToEnd());\n        \n        // Analysis controls\n        document.getElementById('analyzeBtn').addEventListener('click', () => this.analyzePosition());\n        document.getElementById('saveLineBtn').addEventListener('click', () => this.saveAlternativeLine());\n        \n        // Board click handler for alternative moves\n        this.board.addEventListener('click', (e) => this.handleBoardClick(e));\n        \n        // Socket events\n        this.socket.on('historical-position-update', (position) => this.updatePosition(position));\n        this.socket.on('historical-analysis', (analysis) => this.showAnalysis(analysis));\n    }\n\n    async loadGame(gameId) {\n        try {\n            const response = await fetch(`/api/historical-games/${gameId}`);\n            const game = await response.json();\n            \n            this.displayGameInfo(game);\n            this.socket.emit('load-historical-game', gameId);\n            \n            // Reset state\n            this.currentPosition = 0;\n            this.isPlayingAlternative = false;\n            document.getElementById('saveLineBtn').disabled = true;\n            \n            this.updatePosition(game.initialPosition);\n        } catch (error) {\n            console.error('Error loading historical game:', error);\n            this.showNotification('Error loading game', 'error');\n        }\n    }\n\n    updatePosition(position) {\n        // Update board\n        this.updateBoard(position.fen);\n        \n        // Update moves list\n        this.updateMovesList(position.moves, position.currentMove);\n        \n        // Update controls state\n        this.currentPosition = position.currentMove;\n        document.getElementById('saveLineBtn').disabled = !position.isAlternativeLine;\n        \n        // Highlight current move\n        this.highlightMove(position.currentMove);\n    }\n\n    updateBoard(fen) {\n        // Convert FEN to board position and update the display\n        const pieces = this.fenToPosition(fen);\n        this.board.innerHTML = '';\n        \n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                const square = document.createElement('div');\n                square.className = `square ${(i + j) % 2 === 0 ? 'white' : 'black'}`;\n                square.dataset.row = i;\n                square.dataset.col = j;\n                \n                const piece = pieces[i][j];\n                if (piece) {\n                    square.textContent = piece;\n                    square.dataset.pieceColor = piece.charCodeAt(0) < 9817 ? 'white' : 'black';\n                }\n                \n                this.board.appendChild(square);\n            }\n        }\n    }\n\n    updateMovesList(moves, currentMove) {\n        this.movesList.innerHTML = '';\n        moves.forEach((move, index) => {\n            const moveElement = document.createElement('div');\n            moveElement.className = 'move' + (index === currentMove ? ' current' : '');\n            moveElement.textContent = `${Math.floor(index/2) + 1}. ${move.from}${move.to}`;\n            moveElement.addEventListener('click', () => this.jumpToMove(index));\n            this.movesList.appendChild(moveElement);\n        });\n    }\n\n    displayGameInfo(game) {\n        const info = `\n            <h2>${game.title}</h2>\n            <div class=\"game-details\">\n                <p><strong>Event:</strong> ${game.event}</p>\n                <p><strong>Date:</strong> ${new Date(game.date).toLocaleDateString()}</p>\n                <p><strong>White:</strong> ${game.white.title} ${game.white.name} (${game.white.rating})</p>\n                <p><strong>Black:</strong> ${game.black.title} ${game.black.name} (${game.black.rating})</p>\n                <p><strong>Result:</strong> ${game.result}</p>\n                <p><strong>Opening:</strong> ${game.opening.name} (${game.opening.eco})</p>\n            </div>\n            <div class=\"game-description\">\n                <h3>Historical Significance</h3>\n                <p>${game.historicalSignificance}</p>\n                <h3>Description</h3>\n                <p>${game.description}</p>\n            </div>\n        `;\n        this.gameInfo.innerHTML = info;\n    }\n\n    async analyzePosition() {\n        try {\n            const response = await fetch(`/api/historical-games/analyze`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ position: this.currentPosition })\n            });\n            const analysis = await response.json();\n            this.showAnalysis(analysis);\n        } catch (error) {\n            console.error('Error analyzing position:', error);\n            this.showNotification('Error analyzing position', 'error');\n        }\n    }\n\n    showAnalysis(analysis) {\n        const panel = `\n            <div class=\"analysis-header\">\n                <h3>Position Analysis</h3>\n                <span class=\"evaluation\">${analysis.evaluation}</span>\n            </div>\n            <div class=\"best-line\">\n                <h4>Best Line:</h4>\n                <p>${analysis.bestLine.join(' ')}</p>\n            </div>\n        `;\n        this.analysisPanel.innerHTML = panel;\n        this.analysisPanel.classList.remove('hidden');\n    }\n\n    async saveAlternativeLine() {\n        try {\n            const response = await fetch('/api/historical-games/save-variation', {\n                method: 'POST'\n            });\n            const result = await response.json();\n            this.showNotification('Alternative line saved successfully', 'success');\n        } catch (error) {\n            console.error('Error saving alternative line:', error);\n            this.showNotification('Error saving alternative line', 'error');\n        }\n    }\n\n    // Helper methods\n    fenToPosition(fen) {\n        // Convert FEN string to 2D array of pieces\n        const [position] = fen.split(' ');\n        const rows = position.split('/');\n        const board = [];\n        \n        for (const row of rows) {\n            const boardRow = [];\n            for (const char of row) {\n                if (isNaN(char)) {\n                    boardRow.push(char);\n                } else {\n                    for (let i = 0; i < parseInt(char); i++) {\n                        boardRow.push('');\n                    }\n                }\n            }\n            board.push(boardRow);\n        }\n        \n        return board;\n    }\n\n    showNotification(message, type) {\n        const notification = document.createElement('div');\n        notification.className = `notification ${type}`;\n        notification.textContent = message;\n        document.body.appendChild(notification);\n        \n        setTimeout(() => {\n            notification.remove();\n        }, 3000);\n    }\n\n    // Playback controls\n    jumpToStart() {\n        this.socket.emit('historical-jump-to', 0);\n    }\n\n    prevMove() {\n        this.socket.emit('historical-prev-move');\n    }\n\n    nextMove() {\n        this.socket.emit('historical-next-move');\n    }\n\n    jumpToEnd() {\n        this.socket.emit('historical-jump-to-end');\n    }\n\n    toggleAutoPlay() {\n        const button = document.getElementById('playPauseBtn');\n        const icon = button.querySelector('i');\n        \n        if (icon.classList.contains('fa-play')) {\n            icon.classList.replace('fa-play', 'fa-pause');\n            this.startAutoPlay();\n        } else {\n            icon.classList.replace('fa-pause', 'fa-play');\n            this.stopAutoPlay();\n        }\n    }\n\n    startAutoPlay() {\n        this.autoPlayInterval = setInterval(() => {\n            if (this.currentPosition >= this.totalMoves - 1) {\n                this.stopAutoPlay();\n                return;\n            }\n            this.nextMove();\n        }, 2000);\n    }\n\n    stopAutoPlay() {\n        clearInterval(this.autoPlayInterval);\n        const button = document.getElementById('playPauseBtn');\n        button.querySelector('i').classList.replace('fa-pause', 'fa-play');\n    }\n}\n\n// Initialize when the page loads\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.historicalPlayer = new HistoricalGamePlayer();\n    \n    // Load game if ID is in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const gameId = urlParams.get('gameId');\n    if (gameId) {\n        window.historicalPlayer.loadGame(gameId);\n    }\n}); "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","HistoricalGamePlayer","_classCallCheck","this","socket","io","board","document","getElementById","movesList","gameInfo","controlsContainer","analysisPanel","currentPosition","isPlayingAlternative","initializeControls","initializeEventListeners","innerHTML","_this","addEventListener","jumpToStart","prevMove","toggleAutoPlay","nextMove","jumpToEnd","analyzePosition","saveAlternativeLine","handleBoardClick","on","position","updatePosition","analysis","showAnalysis","_loadGame","_callee","gameId","response","game","_context","fetch","concat","json","displayGameInfo","emit","disabled","initialPosition","t0","console","error","showNotification","_x","updateBoard","fen","updateMovesList","moves","currentMove","isAlternativeLine","highlightMove","pieces","fenToPosition","j","square","createElement","className","dataset","row","col","piece","textContent","pieceColor","charCodeAt","appendChild","_this2","move","index","moveElement","Math","floor","from","to","jumpToMove","info","title","event","Date","date","toLocaleDateString","white","rating","black","result","opening","eco","historicalSignificance","description","_analyzePosition","_callee2","_context2","headers","body","JSON","stringify","panel","evaluation","bestLine","join","classList","remove","_saveAlternativeLine","_callee3","_context3","_step","_iterator","_createForOfIteratorHelper","_slicedToArray","split","_step2","boardRow","_iterator2","char","parseInt","err","message","notification","setTimeout","icon","querySelector","contains","replace","startAutoPlay","stopAutoPlay","_this3","autoPlayInterval","setInterval","totalMoves","clearInterval","window","historicalPlayer","URLSearchParams","location","search","get","loadGame"],"sourceRoot":""}