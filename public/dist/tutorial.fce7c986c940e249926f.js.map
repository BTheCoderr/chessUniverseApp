{"version":3,"file":"tutorial.fce7c986c940e249926f.js","mappings":"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","sources":["webpack://simplechessapp/./public/js/tutorial.js"],"sourcesContent":["class TutorialManager {\n    constructor() {\n        this.board = null;\n        this.game = null;\n        this.currentExercise = null;\n        \n        this.initializeBoard();\n        this.setupEventListeners();\n    }\n\n    initializeBoard() {\n        const config = {\n            draggable: true,\n            position: 'start',\n            onDragStart: this.onDragStart.bind(this),\n            onDrop: this.onDrop.bind(this),\n            onSnapEnd: this.onSnapEnd.bind(this)\n        };\n        \n        this.board = Chessboard('board', config);\n        this.game = new Chess();\n    }\n\n    setupEventListeners() {\n        document.getElementById('reset-btn').addEventListener('click', () => {\n            this.resetPosition();\n        });\n\n        document.getElementById('hint-btn').addEventListener('click', () => {\n            this.getHint();\n        });\n\n        document.getElementById('next-btn').addEventListener('click', () => {\n            this.nextExercise();\n        });\n    }\n\n    loadExercise(exercise) {\n        this.currentExercise = exercise;\n        this.game.load(exercise.position.fen);\n        this.board.position(exercise.position.fen);\n        \n        document.getElementById('exercise-description').textContent = exercise.position.description;\n        document.getElementById('feedback').textContent = '';\n    }\n\n    onDragStart(source, piece) {\n        // Allow moves only if it's the player's turn\n        return !this.game.game_over() && \n               piece.search(/^b/) === -1; // Only allow white pieces\n    }\n\n    onDrop(source, target) {\n        const move = this.game.move({\n            from: source,\n            to: target,\n            promotion: 'q' // Always promote to queen for simplicity\n        });\n\n        if (move === null) return 'snapback';\n\n        this.validateMove(source + target);\n    }\n\n    onSnapEnd() {\n        this.board.position(this.game.fen());\n    }\n\n    async validateMove(move) {\n        try {\n            const response = await fetch(`/tutorial/${this.currentExercise._id}/exercise/${this.currentExercise._id}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    move: move,\n                    position: this.game.fen()\n                })\n            });\n\n            const result = await response.json();\n            this.showFeedback(result);\n        } catch (error) {\n            console.error('Error validating move:', error);\n            this.showFeedback({ correct: false, explanation: 'Error validating move' });\n        }\n    }\n\n    async getHint() {\n        try {\n            const response = await fetch(`/tutorial/${this.currentExercise._id}/exercise/${this.currentExercise._id}/hint?position=${encodeURIComponent(this.game.fen())}`);\n            const result = await response.json();\n            this.showFeedback({ hint: result.hint });\n        } catch (error) {\n            console.error('Error getting hint:', error);\n            this.showFeedback({ hint: 'Error getting hint' });\n        }\n    }\n\n    resetPosition() {\n        this.game.load(this.currentExercise.position.fen);\n        this.board.position(this.currentExercise.position.fen);\n        document.getElementById('feedback').textContent = '';\n    }\n\n    showFeedback(result) {\n        const feedback = document.getElementById('feedback');\n        feedback.textContent = result.correct ? \n            result.explanation : \n            (result.hint || 'Try again');\n        feedback.className = result.correct ? 'text-success' : 'text-info';\n    }\n\n    nextExercise() {\n        // This would typically load the next exercise\n        // For now, just reset the current one\n        this.resetPosition();\n    }\n}\n\n// Initialize the tutorial manager when the page loads\nwindow.tutorialManager = new TutorialManager(); "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","TutorialManager","_classCallCheck","this","board","game","currentExercise","initializeBoard","setupEventListeners","config","draggable","position","onDragStart","bind","onDrop","onSnapEnd","Chessboard","Chess","_this","document","getElementById","addEventListener","resetPosition","getHint","nextExercise","exercise","load","fen","textContent","description","source","piece","game_over","search","target","move","from","to","promotion","validateMove","_validateMove","_callee","response","result","_context","fetch","concat","_id","headers","body","JSON","stringify","json","showFeedback","t0","console","error","correct","explanation","_x","_getHint","_callee2","_context2","encodeURIComponent","hint","feedback","className","window","tutorialManager"],"sourceRoot":""}