{"version":3,"file":"puzzles.71b23d1682b30ac0abe8.js","mappings":"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","sources":["webpack://simplechessapp/./public/js/puzzles.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    // Initialize variables\n    let currentPuzzle = null;\n    let puzzleBoard = null;\n    let game = new Chess();\n\n    // DOM elements\n    const themeFilter = document.getElementById('themeFilter');\n    const difficultyFilter = document.getElementById('difficultyFilter');\n    const puzzleGrid = document.getElementById('puzzleGrid');\n    const dailyPuzzlePreview = document.getElementById('dailyPuzzlePreview');\n\n    // Stats elements\n    const puzzleRating = document.getElementById('puzzleRating');\n    const puzzlesSolved = document.getElementById('puzzlesSolved');\n    const puzzleStreak = document.getElementById('puzzleStreak');\n\n    // Load user stats\n    async function loadUserStats() {\n        try {\n            const response = await fetch('/api/puzzles/stats');\n            if (response.ok) {\n                const stats = await response.json();\n                puzzleRating.textContent = stats.rating || 1500;\n                puzzlesSolved.textContent = stats.solved || 0;\n                puzzleStreak.textContent = stats.streak || 0;\n            }\n        } catch (error) {\n            console.error('Failed to load user stats:', error);\n        }\n    }\n\n    // Load daily puzzle\n    async function loadDailyPuzzle() {\n        try {\n            const response = await fetch('/api/puzzles/daily');\n            if (response.ok) {\n                const puzzle = await response.json();\n                displayDailyPuzzle(puzzle);\n            }\n        } catch (error) {\n            console.error('Failed to load daily puzzle:', error);\n        }\n    }\n\n    // Display daily puzzle preview\n    function displayDailyPuzzle(puzzle) {\n        dailyPuzzlePreview.innerHTML = `\n            <div class=\"puzzle-card\" data-puzzle-id=\"${puzzle.id}\">\n                <div class=\"puzzle-board\" id=\"dailyBoard\"></div>\n                <div class=\"puzzle-info\">\n                    <h4>Daily Challenge</h4>\n                    <p>${puzzle.description}</p>\n                    <button class=\"solve-btn\" onclick=\"window.location.href='/puzzles/${puzzle.id}'\">\n                        Solve Puzzle\n                    </button>\n                </div>\n            </div>\n        `;\n\n        // Initialize mini board for daily puzzle\n        const config = {\n            position: puzzle.fen,\n            showNotation: true,\n            draggable: false,\n            pieceTheme: '/img/pieces/{piece}.png'\n        };\n        const dailyBoard = Chessboard('dailyBoard', config);\n\n        // Resize board to fit container\n        window.addEventListener('resize', dailyBoard.resize);\n    }\n\n    // Load puzzles by theme and difficulty\n    async function loadPuzzles() {\n        const theme = themeFilter.value;\n        const difficulty = difficultyFilter.value;\n\n        try {\n            const response = await fetch(`/api/puzzles/theme/${theme}?difficulty=${difficulty}`);\n            if (response.ok) {\n                const puzzles = await response.json();\n                displayPuzzles(puzzles);\n            }\n        } catch (error) {\n            console.error('Failed to load puzzles:', error);\n        }\n    }\n\n    // Display puzzles in grid\n    function displayPuzzles(puzzles) {\n        puzzleGrid.innerHTML = puzzles.map(puzzle => `\n            <div class=\"puzzle-card\" data-puzzle-id=\"${puzzle.id}\">\n                <div class=\"puzzle-board\" id=\"board-${puzzle.id}\"></div>\n                <div class=\"puzzle-info\">\n                    <p class=\"puzzle-theme\">${puzzle.themes.join(', ')}</p>\n                    <p class=\"puzzle-rating\">Rating: ${puzzle.rating}</p>\n                    <button class=\"solve-btn\" onclick=\"window.location.href='/puzzles/${puzzle.id}'\">\n                        Solve Puzzle\n                    </button>\n                </div>\n            </div>\n        `).join('');\n\n        // Initialize mini boards for each puzzle\n        puzzles.forEach(puzzle => {\n            const config = {\n                position: puzzle.fen,\n                showNotation: true,\n                draggable: false,\n                pieceTheme: '/img/pieces/{piece}.png'\n            };\n            const board = Chessboard(`board-${puzzle.id}`, config);\n\n            // Resize board to fit container\n            window.addEventListener('resize', board.resize);\n        });\n    }\n\n    // Event listeners for filters\n    themeFilter.addEventListener('change', loadPuzzles);\n    difficultyFilter.addEventListener('change', loadPuzzles);\n\n    // Initialize page\n    loadUserStats();\n    loadDailyPuzzle();\n    loadPuzzles();\n}); "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","document","addEventListener","Chess","themeFilter","getElementById","difficultyFilter","puzzleGrid","dailyPuzzlePreview","puzzleRating","puzzlesSolved","puzzleStreak","_loadUserStats","_callee","response","stats","_context","fetch","ok","json","textContent","rating","solved","streak","t0","console","error","_loadDailyPuzzle","_callee2","_context2","displayDailyPuzzle","puzzle","innerHTML","concat","id","description","config","position","fen","showNotation","draggable","pieceTheme","dailyBoard","Chessboard","window","resize","loadPuzzles","_loadPuzzles","_callee3","theme","difficulty","_context3","displayPuzzles","puzzles","map","themes","join","board","loadUserStats","loadDailyPuzzle"],"sourceRoot":""}